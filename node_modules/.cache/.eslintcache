[{"C:\\Users\\user\\Desktop\\Site_ecommerce\\front_end\\decostore\\src\\index.js":"1","C:\\Users\\user\\Desktop\\Site_ecommerce\\front_end\\decostore\\src\\App.js":"2","C:\\Users\\user\\Desktop\\Site_ecommerce\\front_end\\decostore\\src\\components\\Navbar\\Navbar.js":"3","C:\\Users\\user\\Desktop\\Site_ecommerce\\front_end\\decostore\\src\\components\\Navbar\\NavbarElement.js":"4","C:\\Users\\user\\Desktop\\Site_ecommerce\\front_end\\decostore\\src\\GlobalStyles.js":"5","C:\\Users\\user\\Desktop\\Site_ecommerce\\front_end\\decostore\\src\\pages\\Login\\Login.js":"6","C:\\Users\\user\\Desktop\\Site_ecommerce\\front_end\\decostore\\src\\components\\HeroSlides\\HeroSlides.js":"7","C:\\Users\\user\\Desktop\\Site_ecommerce\\front_end\\decostore\\src\\components\\HeroSlides\\HeroSlidesElements.js":"8","C:\\Users\\user\\Desktop\\Site_ecommerce\\front_end\\decostore\\src\\pages\\Acceuil\\Acceuil.js":"9","C:\\Users\\user\\Desktop\\Site_ecommerce\\front_end\\decostore\\src\\pages\\SignUp\\SignUp.js":"10","C:\\Users\\user\\Desktop\\Site_ecommerce\\front_end\\decostore\\src\\pages\\LogIn\\LogIn.js":"11","C:\\Users\\user\\Desktop\\Site_ecommerce\\front_end\\decostore\\src\\pages\\Catalogue\\Catalogue.js":"12","C:\\Users\\user\\Desktop\\Site_ecommerce\\front_end\\decostore\\src\\pages\\Profiles\\VerifyRole.js":"13","C:\\Users\\user\\Desktop\\Site_ecommerce\\front_end\\decostore\\src\\pages\\Profiles\\AdminDashboard\\AdminDashboard.js":"14","C:\\Users\\user\\Desktop\\Site_ecommerce\\front_end\\decostore\\src\\pages\\Profiles\\AdminDashboard\\AdminDashboardElements.js":"15","C:\\Users\\user\\Desktop\\Site_ecommerce\\front_end\\decostore\\src\\pages\\Profiles\\SuperAdminDashboard\\SuperAdminDashboard.js":"16","C:\\Users\\user\\Desktop\\Site_ecommerce\\front_end\\decostore\\src\\pages\\Profiles\\UserDashboard\\UserDashboard.js":"17","C:\\Users\\user\\Desktop\\Site_ecommerce\\front_end\\decostore\\src\\pages\\Profiles\\MonProfile\\MonProfile.js":"18","C:\\Users\\user\\Desktop\\Site_ecommerce\\front_end\\decostore\\src\\pages\\Profiles\\MonProfile\\MonProfileElements.js":"19","C:\\Users\\user\\Desktop\\Site_ecommerce\\front_end\\decostore\\src\\pages\\AjouterProduit\\AjouterProduit.js":"20","C:\\Users\\user\\Desktop\\Site_ecommerce\\front_end\\decostore\\src\\pages\\AjouterProduit\\AjouterProduitElements.js":"21","C:\\Users\\user\\Desktop\\Site_ecommerce\\front_end\\decostore\\src\\pages\\Gstock\\Gstock.js":"22","C:\\Users\\user\\Desktop\\Site_ecommerce\\front_end\\decostore\\src\\pages\\Gstock\\GstockElements.js":"23","C:\\Users\\user\\Desktop\\Site_ecommerce\\front_end\\decostore\\src\\pages\\ModifierProduit\\ModifierProduit.js":"24","C:\\Users\\user\\Desktop\\Site_ecommerce\\front_end\\decostore\\src\\pages\\ModifierProduit\\ModifierProduitElements.js":"25","C:\\Users\\user\\Desktop\\Site_ecommerce\\front_end\\decostore\\src\\pages\\AjouterAdmin\\AjouterAdmin.js":"26","C:\\Users\\user\\Desktop\\Site_ecommerce\\front_end\\decostore\\src\\pages\\Catalogue\\CatalogueElements.js":"27"},{"size":197,"mtime":1619717234196,"results":"28","hashOfConfig":"29"},{"size":4254,"mtime":1621103362920,"results":"30","hashOfConfig":"29"},{"size":4486,"mtime":1621706430623,"results":"31","hashOfConfig":"29"},{"size":4264,"mtime":1621013865491,"results":"32","hashOfConfig":"29"},{"size":4254,"mtime":1621101708622,"results":"33","hashOfConfig":"29"},{"size":3847,"mtime":1620560373254,"results":"34","hashOfConfig":"29"},{"size":1881,"mtime":1621608099270,"results":"35","hashOfConfig":"29"},{"size":1095,"mtime":1620595555938,"results":"36","hashOfConfig":"29"},{"size":199,"mtime":1620478810197,"results":"37","hashOfConfig":"29"},{"size":6300,"mtime":1621102360787,"results":"38","hashOfConfig":"29"},{"size":5089,"mtime":1622481942213,"results":"39","hashOfConfig":"29"},{"size":4124,"mtime":1622482020973,"results":"40","hashOfConfig":"29"},{"size":547,"mtime":1620937784410,"results":"41","hashOfConfig":"29"},{"size":1065,"mtime":1621101968689,"results":"42","hashOfConfig":"29"},{"size":1472,"mtime":1621015464970,"results":"43","hashOfConfig":"29"},{"size":1332,"mtime":1621101173397,"results":"44","hashOfConfig":"29"},{"size":872,"mtime":1621102027130,"results":"45","hashOfConfig":"29"},{"size":881,"mtime":1621013034978,"results":"46","hashOfConfig":"29"},{"size":838,"mtime":1620937330503,"results":"47","hashOfConfig":"29"},{"size":4652,"mtime":1622482489106,"results":"48","hashOfConfig":"29"},{"size":2679,"mtime":1621708835894,"results":"49","hashOfConfig":"29"},{"size":5730,"mtime":1622482484450,"results":"50","hashOfConfig":"29"},{"size":2822,"mtime":1621892296422,"results":"51","hashOfConfig":"29"},{"size":4160,"mtime":1622481824559,"results":"52","hashOfConfig":"29"},{"size":2294,"mtime":1621025793716,"results":"53","hashOfConfig":"29"},{"size":6028,"mtime":1621186011376,"results":"54","hashOfConfig":"29"},{"size":3141,"mtime":1621708911181,"results":"55","hashOfConfig":"29"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},"lf4a3u",{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"58"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"58"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"58"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"58"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"115","messages":"116","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"58"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"58"},"C:\\Users\\user\\Desktop\\Site_ecommerce\\front_end\\decostore\\src\\index.js",[],["121","122"],"C:\\Users\\user\\Desktop\\Site_ecommerce\\front_end\\decostore\\src\\App.js",[],"C:\\Users\\user\\Desktop\\Site_ecommerce\\front_end\\decostore\\src\\components\\Navbar\\Navbar.js",["123"],"import React, { useState, useRef, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport {\r\n  Nav,\r\n  NavbarContainer,\r\n  NavLogo,\r\n  NavMenu,\r\n  NavItem,\r\n  NavLinks,\r\n  NavIcon,\r\n  NavIcons,\r\n  Form,\r\n  ButtonR,\r\n  Input,\r\n  NavIconLink,\r\n} from \"./NavbarElement\";\r\nimport { BiUser, BiSearch } from \"react-icons/bi\";\r\nimport { FiSettings } from \"react-icons/fi\";\r\nimport { AiOutlineHeart, AiOutlineShoppingCart } from \"react-icons/ai\";\r\nimport Logo from \"../../assets/Images/Logo.png\";\r\nimport { useHistory } from \"react-router\";\r\nexport const Navbar = ({ setAuthorized }) => {\r\n  const [Products, setProducts] = useState([]);\r\n  const [UpdatedProducts, setUpdatedProducts] = useState([]);\r\n  const [input, setInput] = useState(\"\");\r\n  const [barOpened, setBarOpened] = useState(true);\r\n  const formRef = useRef();\r\n  const inputFocus = useRef();\r\n  const history = useHistory();\r\n  useEffect(() => {\r\n    axios\r\n      .get(\"https://productsapi1.herokuapp.com/api/produits\")\r\n      .then((Response) => {\r\n        setProducts(Response.data);\r\n      })\r\n      .catch((error) => {});\r\n  });\r\n  const onFormSubmit = (e) => {\r\n    // When form submited, clear input, close the searchbar and do something with input\r\n    e.preventDefault();\r\n    setInput(\"\");\r\n    setBarOpened(true);\r\n    // After form submit, do what you want with the input value\r\n    console.log(`Form was submited with input: ${input}`);\r\n  };\r\n  const handleDisconnect = () => {\r\n    localStorage.removeItem(\"state\");\r\n    localStorage.removeItem(\"nom\");\r\n    localStorage.removeItem(\"prenom\");\r\n    localStorage.removeItem(\"id\");\r\n    localStorage.removeItem(\"accessToken\");\r\n    localStorage.removeItem(\"roles\");\r\n    localStorage.removeItem(\"email\");\r\n    localStorage.removeItem(\"role\");\r\n    localStorage.removeItem(\"numtel\");\r\n    setAuthorized(false);\r\n    history.push(\"/hello\");\r\n  };\r\n  const HandleSearch = (e) => {\r\n    setInput(e.target.value);\r\n    if (e.target.value === \"\") {\r\n      setUpdatedProducts(Products);\r\n    } else updateProducts(e.target.value);\r\n  };\r\n  const updateProducts = (value) => {\r\n    setUpdatedProducts([]);\r\n\r\n    Products.map((product) => {\r\n      if (product.nom.includes(value)) {\r\n        setUpdatedProducts((prev) => [...prev, product]);\r\n      }\r\n    });\r\n    console.log(UpdatedProducts);\r\n  };\r\n  return (\r\n    <Nav>\r\n      <NavbarContainer>\r\n        <NavLogo to=\"/\">\r\n          <NavIcon src={Logo} />\r\n        </NavLogo>\r\n        <NavMenu>\r\n          <NavItem>\r\n            <NavLinks to=\"/\">Accueil</NavLinks>\r\n          </NavItem>\r\n          <NavItem>\r\n            <NavLinks to=\"/Catalogue\">Produits</NavLinks>\r\n          </NavItem>\r\n          <NavItem>\r\n            <NavLinks to=\"/\">Contactez-nous</NavLinks>\r\n          </NavItem>\r\n        </NavMenu>\r\n        <Form\r\n          barOpened={barOpened}\r\n          onClick={() => {\r\n            // When form clicked, set state of baropened to true and focus the input\r\n            setBarOpened(true);\r\n            inputFocus.current.focus();\r\n          }}\r\n          // on focus open search bar\r\n          onFocus={() => {\r\n            setBarOpened(true);\r\n            inputFocus.current.focus();\r\n          }}\r\n          // on blur close search bar\r\n          onBlur={() => {\r\n            setBarOpened(true);\r\n          }}\r\n          // On submit, call the onFormSubmit function\r\n          onSubmit={onFormSubmit}\r\n          ref={formRef}\r\n        >\r\n          <ButtonR type=\"submit\" barOpened={barOpened}>\r\n            <BiSearch />\r\n          </ButtonR>\r\n          <Input\r\n            onChange={HandleSearch}\r\n            ref={inputFocus}\r\n            value={input}\r\n            barOpened={barOpened}\r\n            placeholder=\"Rechercher un produit...\"\r\n          />\r\n        </Form>\r\n        <NavIcons>\r\n          <NavItem>\r\n            <NavIconLink to=\"/VerifyRole\">\r\n              <BiUser size=\"30\" />\r\n            </NavIconLink>\r\n          </NavItem>\r\n          <NavItem>\r\n            <NavIconLink>\r\n              <AiOutlineHeart size=\"30\" />\r\n            </NavIconLink>\r\n          </NavItem>\r\n          <NavItem>\r\n            <NavIconLink>\r\n              <AiOutlineShoppingCart size=\"30\" />\r\n            </NavIconLink>\r\n          </NavItem>\r\n          <NavItem>\r\n            <NavIconLink to=\"/\" onClick={handleDisconnect}>\r\n              <FiSettings size=\"30\" />\r\n            </NavIconLink>\r\n          </NavItem>\r\n        </NavIcons>\r\n      </NavbarContainer>\r\n    </Nav>\r\n  );\r\n};\r\nexport default Navbar;\r\n","C:\\Users\\user\\Desktop\\Site_ecommerce\\front_end\\decostore\\src\\components\\Navbar\\NavbarElement.js",[],"C:\\Users\\user\\Desktop\\Site_ecommerce\\front_end\\decostore\\src\\GlobalStyles.js",[],"C:\\Users\\user\\Desktop\\Site_ecommerce\\front_end\\decostore\\src\\pages\\Login\\Login.js",[],"C:\\Users\\user\\Desktop\\Site_ecommerce\\front_end\\decostore\\src\\components\\HeroSlides\\HeroSlides.js",[],"C:\\Users\\user\\Desktop\\Site_ecommerce\\front_end\\decostore\\src\\components\\HeroSlides\\HeroSlidesElements.js",[],"C:\\Users\\user\\Desktop\\Site_ecommerce\\front_end\\decostore\\src\\pages\\Acceuil\\Acceuil.js",[],"C:\\Users\\user\\Desktop\\Site_ecommerce\\front_end\\decostore\\src\\pages\\SignUp\\SignUp.js",[],"C:\\Users\\user\\Desktop\\Site_ecommerce\\front_end\\decostore\\src\\pages\\LogIn\\LogIn.js",[],"C:\\Users\\user\\Desktop\\Site_ecommerce\\front_end\\decostore\\src\\pages\\Catalogue\\Catalogue.js",["124","125"],"import React, { useEffect, useState, useRef } from \"react\";\r\nimport \"./Catalogue_style.css\";\r\nimport axios from \"axios\";\r\nimport { BiSearch } from \"react-icons/bi\";\r\nimport {\r\n  StyledFormContainer,\r\n  StyledFormWrapper,\r\n  CatalogueWrapper,\r\n  Form,\r\n  Input,\r\n  ButtonR,\r\n} from \"./CatalogueElements.js\";\r\nexport const Catalogue = () => {\r\n  const [Products, setProducts] = useState([]);\r\n  const [input, setInput] = useState(\"\");\r\n  const [barOpened, setBarOpened] = useState(false);\r\n  const formRef = useRef();\r\n  const inputFocus = useRef();\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(\"https://whispering-bastion-00988.herokuapp.com/api/produits\")\r\n      .then((Response) => {\r\n        setProducts(Response.data);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  }, [Products]);\r\n\r\n  const onFormSubmit = (e) => {\r\n    // When form submited, clear input, close the searchbar and do something with input\r\n    e.preventDefault();\r\n    setInput(\"\");\r\n    setBarOpened(true);\r\n    // After form submit, do what you want with the input value\r\n    console.log(`Form was submited with input: ${input}`);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <StyledFormWrapper>\r\n        <CatalogueWrapper>\r\n          <h1>Catalogue</h1>\r\n          <Form\r\n            barOpened={barOpened}\r\n            onClick={() => {\r\n              // When form clicked, set state of baropened to true and focus the input\r\n              setBarOpened(true);\r\n              inputFocus.current.focus();\r\n            }}\r\n            // on focus open search bar\r\n            onFocus={() => {\r\n              setBarOpened(true);\r\n              inputFocus.current.focus();\r\n            }}\r\n            // on blur close search bar\r\n            onBlur={() => {\r\n              setBarOpened(false);\r\n            }}\r\n            // On submit, call the onFormSubmit function\r\n            onSubmit={onFormSubmit}\r\n            ref={formRef}\r\n          >\r\n            <ButtonR type=\"submit\" barOpened={barOpened}>\r\n              <BiSearch />\r\n            </ButtonR>\r\n            <Input\r\n              onChange={(e) => {\r\n                setInput(e.target.value);\r\n              }}\r\n              ref={inputFocus}\r\n              value={input}\r\n              barOpened={barOpened}\r\n              placeholder=\"Rechercher un produit...\"\r\n            />\r\n          </Form>\r\n          <StyledFormContainer>\r\n            {Products.filter((product) => {\r\n              if (input === \"\") {\r\n                return product;\r\n              } else if (\r\n                product.nom.toLowerCase().includes(input.toLowerCase())\r\n              ) {\r\n                return product;\r\n              }\r\n            }).map((product, key) => {\r\n              return (\r\n                <div class=\"el-wrapper\" key={key}>\r\n                  <div class=\"box-up\">\r\n                    <img className=\"img\" src={product.imageurl} alt=\"\" />\r\n                    <div class=\"img-info\">\r\n                      <div class=\"info-inner\">\r\n                        <span class=\"p-name\">{product.nom}</span>\r\n                        <span class=\"p-company\">{product.type}</span>\r\n                      </div>\r\n                      <div class=\"a-size\">\r\n                        <span class=\"size\" maxlength=\"10\">\r\n                          Desciption :{product.description}\r\n                        </span>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div class=\"box-down\">\r\n                    <div class=\"h-bg\">\r\n                      <div class=\"h-bg-inner\"></div>\r\n                    </div>\r\n\r\n                    <a class=\"cart\" href=\"#\">\r\n                      <span class=\"price\">{product.prix}$</span>\r\n                      <span class=\"add-to-cart\">\r\n                        <span class=\"txt\">Ajouter au panier</span>\r\n                      </span>\r\n                    </a>\r\n                  </div>\r\n                </div>\r\n              );\r\n            })}\r\n          </StyledFormContainer>\r\n        </CatalogueWrapper>\r\n      </StyledFormWrapper>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Catalogue;\r\n","C:\\Users\\user\\Desktop\\Site_ecommerce\\front_end\\decostore\\src\\pages\\Profiles\\VerifyRole.js",[],"C:\\Users\\user\\Desktop\\Site_ecommerce\\front_end\\decostore\\src\\pages\\Profiles\\AdminDashboard\\AdminDashboard.js",["126"],"import React from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport {\r\n  DashboardContainer,\r\n  Dashboard,\r\n  DashboardList,\r\n  DashboardListItem,\r\n  Listp,\r\n} from \"../AdminDashboard/AdminDashboardElements.js\";\r\nimport { BiPackage, BiUserCircle } from \"react-icons/bi\";\r\nimport { FaUserFriends } from \"react-icons/fa\";\r\n\r\nexport const AdminDashboard = ({ authorized }) => {\r\n  if (!authorized) {\r\n    return <Redirect to=\"/LogIn\" />;\r\n  }\r\n\r\n  return (\r\n    <DashboardContainer>\r\n      <Dashboard>\r\n        <DashboardList>\r\n          <DashboardListItem to=\"/AdminDashboard/MonProfile\">\r\n            <BiUserCircle size=\"32\" />\r\n            <Listp>Mon Profil </Listp>\r\n          </DashboardListItem>\r\n          <DashboardListItem to=\"/AdminDashboard/GestionProduit\">\r\n            <BiPackage size=\"32\" />\r\n            <Listp>\r\n              Gestion des <br />\r\n              produits\r\n            </Listp>\r\n          </DashboardListItem>\r\n        </DashboardList>\r\n      </Dashboard>\r\n    </DashboardContainer>\r\n  );\r\n};\r\nexport default AdminDashboard;\r\n","C:\\Users\\user\\Desktop\\Site_ecommerce\\front_end\\decostore\\src\\pages\\Profiles\\AdminDashboard\\AdminDashboardElements.js",[],"C:\\Users\\user\\Desktop\\Site_ecommerce\\front_end\\decostore\\src\\pages\\Profiles\\SuperAdminDashboard\\SuperAdminDashboard.js",[],"C:\\Users\\user\\Desktop\\Site_ecommerce\\front_end\\decostore\\src\\pages\\Profiles\\UserDashboard\\UserDashboard.js",["127","128"],"import React from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport {\r\n  DashboardContainer,\r\n  Dashboard,\r\n  DashboardList,\r\n  DashboardListItem,\r\n  Listp,\r\n} from \"../AdminDashboard/AdminDashboardElements.js\";\r\nimport { BiPackage, BiUserCircle } from \"react-icons/bi\";\r\nimport { FaUserFriends } from \"react-icons/fa\";\r\nexport const UserDashboard = ({ authorized }) => {\r\n  if (!authorized) {\r\n    return <Redirect to=\"/LogIn\" />;\r\n  }\r\n  return (\r\n    <div>\r\n      <DashboardContainer>\r\n        <Dashboard>\r\n          <DashboardList>\r\n            <DashboardListItem to=\"/SuperAdminDashboard/MonProfile\">\r\n              <BiUserCircle size=\"32\" />\r\n              <Listp>Mon Profil </Listp>\r\n            </DashboardListItem>\r\n          </DashboardList>\r\n        </Dashboard>\r\n      </DashboardContainer>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserDashboard;\r\n","C:\\Users\\user\\Desktop\\Site_ecommerce\\front_end\\decostore\\src\\pages\\Profiles\\MonProfile\\MonProfile.js",["129"],"import React, { useState } from \"react\";\r\nimport { DashboardContainer, Dashboard, Listp } from \"./MonProfileElements.js\";\r\nexport const MonProfile = () => {\r\n  const [state, setState] = useState({\r\n    nom: localStorage.getItem(\"nom\"),\r\n    prenom: localStorage.getItem(\"prenom\"),\r\n    email: localStorage.getItem(\"email\"),\r\n    numtel: localStorage.getItem(\"numtel\"),\r\n    role: localStorage.getItem(\"roles\"),\r\n  });\r\n  return (\r\n    <div>\r\n      <DashboardContainer>\r\n        <Dashboard>\r\n          <h1>Mon Profile</h1>\r\n          <Listp>Nom : {state.nom}</Listp>\r\n          <Listp>Prénom : {state.prenom}</Listp>\r\n          <Listp>Email : {state.email}</Listp>\r\n          <Listp>Numéro de téléphone : {state.numtel}</Listp>\r\n          <Listp>Role : {state.role}</Listp>\r\n        </Dashboard>\r\n      </DashboardContainer>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MonProfile;\r\n","C:\\Users\\user\\Desktop\\Site_ecommerce\\front_end\\decostore\\src\\pages\\Profiles\\MonProfile\\MonProfileElements.js",[],"C:\\Users\\user\\Desktop\\Site_ecommerce\\front_end\\decostore\\src\\pages\\AjouterProduit\\AjouterProduit.js",["130","131"],"import axios from \"axios\";\r\nimport React, { useState } from \"react\";\r\nimport {\r\n  StyledFormWrapper,\r\n  StyledForm,\r\n  StyledInput,\r\n  StyledButton,\r\n  Styledh1,\r\n  StyledFormContainer,\r\n  StyledError,\r\n  Notificationvert,\r\n  Notificationrouge,\r\n  StyledArea,\r\n  ImgProduct,\r\n} from \"./AjouterProduitElements.js\";\r\nconst initalState = {\r\n  nom: \"\",\r\n  type: \"\",\r\n  prix: \"\",\r\n  quantite: \"\",\r\n  description: \"\",\r\n  imageurl: \"\",\r\n};\r\nconst AjouterProduit = () => {\r\n  const [state, setState] = useState(initalState);\r\n  const [nomtype, setnomtype] = useState();\r\n  const [error, setError] = useState(\"\");\r\n  const [Notiv, setNotiv] = useState(\"\");\r\n  const [Notir, setNotir] = useState(\"\");\r\n\r\n  const NomTypeVerif = async (nom, type) => {\r\n    try {\r\n      const resp = await axios.get(\r\n        `https://whispering-bastion-00988.herokuapp.com/api/produits/NomType?nom=${nom}&type=${type}`,\r\n        state\r\n      );\r\n      return resp.data;\r\n    } catch (err) {\r\n      // Handle Error Here\r\n      console.error(err);\r\n      return err.data;\r\n    }\r\n  };\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (state.quantite < 1) {\r\n      setError(\"\");\r\n      setNotiv(\"\");\r\n      setNotir(\"Vous devez saisir une quantité supérieure à 0\");\r\n      return;\r\n    }\r\n\r\n    NomTypeVerif(state.nom, state.type).then((x) => {\r\n      if (x.length === 0) {\r\n        axios\r\n          .post(\r\n            \"https://whispering-bastion-00988.herokuapp.com/api/produits\",\r\n            state\r\n          )\r\n          .then((response) => {\r\n            setError(\"\");\r\n            setNotir(\"\");\r\n            setNotiv(\"Le produit a été ajouté avec succès\");\r\n          })\r\n          .catch((error) => {\r\n            setError(\"\");\r\n            setNotiv(\"\");\r\n            setNotir(error.response.data.message);\r\n          });\r\n      } else {\r\n        setError(\"\");\r\n        setNotiv(\"\");\r\n        setNotir(\"le produit éxiste déjà\");\r\n      }\r\n    });\r\n  };\r\n\r\n  const handleInput = (e) => {\r\n    const inputName = e.currentTarget.name;\r\n    const value = e.currentTarget.value;\r\n    setState((prev) => ({ ...prev, [inputName]: value }));\r\n  };\r\n  return (\r\n    <div>\r\n      <StyledFormWrapper>\r\n        <StyledFormContainer>\r\n          <StyledForm onSubmit={handleSubmit}>\r\n            <Styledh1>Ajouter un produit!</Styledh1>\r\n            <br />\r\n            <label htmlFor=\"nom\"></label>\r\n            <StyledInput\r\n              type=\"text\"\r\n              name=\"nom\"\r\n              value={state.nom}\r\n              onChange={handleInput}\r\n              placeholder=\"Nom...\"\r\n            />\r\n            <label htmlFor=\"type\"></label>\r\n            <StyledInput\r\n              type=\"text\"\r\n              name=\"type\"\r\n              value={state.type}\r\n              onChange={handleInput}\r\n              placeholder=\"Type...\"\r\n            />\r\n            <label htmlFor=\"prix\"></label>\r\n            <StyledInput\r\n              type=\"text\"\r\n              name=\"prix\"\r\n              value={state.prix}\r\n              onChange={handleInput}\r\n              placeholder=\"Prix...\"\r\n            />\r\n            <label htmlFor=\"quantite\"></label>\r\n            <StyledInput\r\n              type=\"text\"\r\n              name=\"quantite\"\r\n              value={state.quantite}\r\n              onChange={handleInput}\r\n              placeholder=\"Quantité...\"\r\n            />\r\n            <label htmlFor=\"description\"></label>\r\n            <StyledArea\r\n              type=\"text\"\r\n              name=\"description\"\r\n              value={state.description}\r\n              onChange={handleInput}\r\n              placeholder=\"Description...\"\r\n            />\r\n\r\n            <label htmlFor=\"imageurl\"></label>\r\n            <StyledInput\r\n              type=\"url\"\r\n              name=\"imageurl\"\r\n              value={state.imageurl}\r\n              onChange={handleInput}\r\n              placeholder=\"Url de la photo...\"\r\n            />\r\n            <center>\r\n              <ImgProduct src={state.imageurl} />\r\n            </center>\r\n            {error && (\r\n              <StyledError>\r\n                <p>{error}</p>\r\n              </StyledError>\r\n            )}\r\n            {Notir && (\r\n              <Notificationrouge>\r\n                <span>{Notir}</span>\r\n              </Notificationrouge>\r\n            )}\r\n            {Notiv && (\r\n              <Notificationvert>\r\n                <span>{Notiv}</span>\r\n              </Notificationvert>\r\n            )}\r\n            <StyledButton type=\"submit\">Enregistrer le produit</StyledButton>\r\n          </StyledForm>\r\n        </StyledFormContainer>\r\n      </StyledFormWrapper>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AjouterProduit;\r\n","C:\\Users\\user\\Desktop\\Site_ecommerce\\front_end\\decostore\\src\\pages\\AjouterProduit\\AjouterProduitElements.js",[],"C:\\Users\\user\\Desktop\\Site_ecommerce\\front_end\\decostore\\src\\pages\\Gstock\\Gstock.js",["132"],"import axios from \"axios\";\r\nimport React, { useEffect, useRef, useState } from \"react\";\r\nimport {\r\n  GStockContainer,\r\n  Wrapper,\r\n  TableTh,\r\n  GStockTable,\r\n  ProductImg,\r\n  TableTd,\r\n  TableLink,\r\n  TableButton,\r\n  BtnAjouterP,\r\n  Form,\r\n  ButtonR,\r\n  Input,\r\n} from \"./GstockElements.js\";\r\nimport { VscCheck, VscClose } from \"react-icons/vsc\";\r\nimport { MdDelete, MdModeEdit } from \"react-icons/md\";\r\nimport { BiSearch } from \"react-icons/bi\";\r\nimport { RiAddCircleLine } from \"react-icons/ri\";\r\nconst Gstock = () => {\r\n  const [Products, setProducts] = useState([]);\r\n  let Compteur = 0;\r\n  const [input, setInput] = useState(\"\");\r\n  const [barOpened, setBarOpened] = useState(false);\r\n  const formRef = useRef();\r\n  const inputFocus = useRef();\r\n\r\n  const onFormSubmit = (e) => {\r\n    // When form submited, clear input, close the searchbar and do something with input\r\n    e.preventDefault();\r\n    setInput(\"\");\r\n    setBarOpened(true);\r\n    // After form submit, do what you want with the input value\r\n    console.log(`Form was submited with input: ${input}`);\r\n  };\r\n  useEffect(() => {\r\n    axios\r\n      .get(\"https://whispering-bastion-00988.herokuapp.com/api/produits\")\r\n      .then((Response) => {\r\n        setProducts(Response.data);\r\n      })\r\n      .catch((error) => {});\r\n  }, [Products]);\r\n  const HandleEtat = (nombre) => {\r\n    if (nombre > 0) {\r\n      return <VscCheck color=\"green\" />;\r\n    } else return <VscClose color=\"red\" />;\r\n  };\r\n  const DeleteHandler = (id) => {\r\n    axios\r\n\r\n      .delete(\r\n        `https://whispering-bastion-00988.herokuapp.com/api/produits/${id}`\r\n      )\r\n\r\n      .delete(\r\n        `https://whispering-bastion-00988.herokuapp.com/api/produits/${id}`\r\n      )\r\n      .then((response) => {\r\n        console.log(response.data);\r\n      })\r\n      .catch();\r\n  };\r\n  const DisplayCompteur = () => {\r\n    Compteur++;\r\n    return Compteur;\r\n  };\r\n  return (\r\n    <div>\r\n      <Wrapper>\r\n        <GStockContainer>\r\n          <BtnAjouterP to=\"/GestionProduit/AjouterProduit\">\r\n            <RiAddCircleLine size=\"48\" />\r\n          </BtnAjouterP>\r\n          <h3>Ajouter un produit</h3>\r\n          <Form\r\n            barOpened={barOpened}\r\n            onClick={() => {\r\n              // When form clicked, set state of baropened to true and focus the input\r\n              setBarOpened(true);\r\n              inputFocus.current.focus();\r\n            }}\r\n            // on focus open search bar\r\n            onFocus={() => {\r\n              setBarOpened(true);\r\n              inputFocus.current.focus();\r\n            }}\r\n            // on blur close search bar\r\n            onBlur={() => {\r\n              setBarOpened(false);\r\n            }}\r\n            // On submit, call the onFormSubmit function\r\n            onSubmit={onFormSubmit}\r\n            ref={formRef}\r\n          >\r\n            <ButtonR type=\"submit\" barOpened={barOpened}>\r\n              <BiSearch />\r\n            </ButtonR>\r\n            <Input\r\n              onChange={(e) => {\r\n                setInput(e.target.value);\r\n              }}\r\n              ref={inputFocus}\r\n              value={input}\r\n              barOpened={barOpened}\r\n              placeholder=\"Rechercher un produit...\"\r\n            />\r\n          </Form>\r\n          <GStockTable>\r\n            <tr>\r\n              <TableTh>Num Produits</TableTh>\r\n              <TableTh>Nom</TableTh>\r\n              <TableTh>Image</TableTh>\r\n              <TableTh>Prix</TableTh>\r\n              <TableTh>Quantité</TableTh>\r\n              <TableTh>État</TableTh>\r\n              <TableTh>Modifier</TableTh>\r\n              <TableTh>Supprimer</TableTh>\r\n            </tr>\r\n            {Products.filter((product) => {\r\n              if (input === \"\") {\r\n                return product;\r\n              } else if (\r\n                product.nom.toLowerCase().includes(input.toLowerCase())\r\n              ) {\r\n                return product;\r\n              }\r\n            }).map((product, key) => {\r\n              return (\r\n                <tr id={product.id} key={key}>\r\n                  <TableTd>{DisplayCompteur()}</TableTd>\r\n                  <TableTd>{product.nom}</TableTd>\r\n                  <TableTd>\r\n                    <ProductImg src={product.imageurl} />\r\n                  </TableTd>\r\n\r\n                  <TableTd>{product.prix}</TableTd>\r\n\r\n                  <TableTd>{product.quantite}</TableTd>\r\n                  <TableTd>{HandleEtat(product.quantite)}</TableTd>\r\n                  <TableTd>\r\n                    <TableLink\r\n                      to={{\r\n                        pathname: `/AdminDashboard/GestionProduit/ModifierProduit/${product.id}`,\r\n                        id: product.id,\r\n                      }}\r\n                    >\r\n                      <MdModeEdit color=\"green\" size=\"24\" />\r\n                    </TableLink>\r\n                  </TableTd>\r\n                  <TableTd>\r\n                    <TableButton\r\n                      onClick={() => {\r\n                        if (\r\n                          window.confirm(\r\n                            \"Voulez-vous vraiment supprimer ce produit?\"\r\n                          )\r\n                        ) {\r\n                          DeleteHandler(product.id);\r\n                          setTimeout(() => {\r\n                            alert(\"Produit supprimé avec succès !\");\r\n                          }, 1500);\r\n                        }\r\n                      }}\r\n                    >\r\n                      <MdDelete color=\"red\" size=\"24\" />\r\n                    </TableButton>\r\n                  </TableTd>\r\n                </tr>\r\n              );\r\n            })}\r\n          </GStockTable>\r\n        </GStockContainer>\r\n      </Wrapper>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Gstock;\r\n","C:\\Users\\user\\Desktop\\Site_ecommerce\\front_end\\decostore\\src\\pages\\Gstock\\GstockElements.js",[],"C:\\Users\\user\\Desktop\\Site_ecommerce\\front_end\\decostore\\src\\pages\\ModifierProduit\\ModifierProduit.js",["133","134","135"],"import axios from \"axios\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { useParams, useLocation } from \"react-router-dom\";\r\nimport {\r\n  StyledFormWrapper,\r\n  StyledForm,\r\n  StyledInput,\r\n  StyledButton,\r\n  Styledh1,\r\n  StyledFormContainer,\r\n  StyledArea,\r\n  StyledError,\r\n  Notificationvert,\r\n  Notificationrouge,\r\n} from \"../AjouterProduit/AjouterProduitElements.js\";\r\n\r\nconst ModifierProduit = () => {\r\n  const { id } = useParams();\r\n  const [error, setError] = useState(\"\");\r\n  const [Notiv, setNotiv] = useState(\"\");\r\n  const [Notir, setNotir] = useState(\"\");\r\n  const [CurrentState, setCurrentState] = useState({});\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(`https://whispering-bastion-00988.herokuapp.com/api/produits/${id}`)\r\n      .then((response) => {\r\n        setCurrentState(response.data);\r\n      });\r\n  }, []);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    axios\r\n      .put(\r\n        `https://whispering-bastion-00988.herokuapp.com/api/produits/${id}`,\r\n        CurrentState\r\n      )\r\n      .then((response) => {\r\n        setError(\"\");\r\n        setNotir(\"\");\r\n        setNotiv(\"Produit modifier avec succès\");\r\n      })\r\n      .catch((error) => {\r\n        setError(\"\");\r\n        setNotiv(\"\");\r\n        setNotir(error.response.data.message);\r\n      });\r\n  };\r\n\r\n  const handleInput = (e) => {\r\n    const inputName = e.currentTarget.name;\r\n    console.log(inputName);\r\n    const value = e.currentTarget.value;\r\n    console.log(value);\r\n    setCurrentState((prev) => ({ ...prev, [inputName]: value }));\r\n  };\r\n  return (\r\n    <div>\r\n      <StyledFormWrapper>\r\n        <StyledFormContainer>\r\n          <StyledForm onSubmit={handleSubmit}>\r\n            <Styledh1>Modifier le produit</Styledh1>\r\n            <br />\r\n            <label htmlFor=\"nom\"></label>\r\n            <StyledInput\r\n              type=\"text\"\r\n              name=\"nom\"\r\n              value={CurrentState.nom}\r\n              onChange={handleInput}\r\n              placeholder=\"Nom...\"\r\n            />\r\n            <label htmlFor=\"type\"></label>\r\n            <StyledInput\r\n              type=\"text\"\r\n              name=\"type\"\r\n              value={CurrentState.type}\r\n              onChange={handleInput}\r\n              placeholder=\"Type...\"\r\n            />\r\n            <label htmlFor=\"prix\"></label>\r\n            <StyledInput\r\n              type=\"text\"\r\n              name=\"prix\"\r\n              value={CurrentState.prix}\r\n              onChange={handleInput}\r\n              placeholder=\"Prix...\"\r\n            />\r\n            <label htmlFor=\"quantite\"></label>\r\n            <StyledInput\r\n              type=\"text\"\r\n              name=\"quantite\"\r\n              value={CurrentState.quantite}\r\n              onChange={handleInput}\r\n              placeholder=\"Quantité...\"\r\n            />\r\n            <label htmlFor=\"description\"></label>\r\n            <StyledArea\r\n              type=\"text\"\r\n              name=\"description\"\r\n              value={CurrentState.description}\r\n              onChange={handleInput}\r\n              placeholder=\"description...\"\r\n            />\r\n            <label htmlFor=\"imageurl\"></label>\r\n            <StyledInput\r\n              type=\"url\"\r\n              name=\"imageurl\"\r\n              value={CurrentState.imageurl}\r\n              onChange={handleInput}\r\n              placeholder=\"Url de la photo...\"\r\n            />\r\n            <center>\r\n              <img src={CurrentState.imageurl} width=\"50px\" />\r\n            </center>\r\n            {error && (\r\n              <StyledError>\r\n                <p>{error}</p>\r\n              </StyledError>\r\n            )}\r\n            {Notir && (\r\n              <Notificationrouge>\r\n                <span>{Notir}</span>\r\n              </Notificationrouge>\r\n            )}\r\n            {Notiv && (\r\n              <Notificationvert>\r\n                <span>{Notiv}</span>\r\n              </Notificationvert>\r\n            )}\r\n            <StyledButton type=\"submit\">\r\n              Enregistrer les modifications\r\n            </StyledButton>\r\n          </StyledForm>\r\n        </StyledFormContainer>\r\n      </StyledFormWrapper>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ModifierProduit;\r\n","C:\\Users\\user\\Desktop\\Site_ecommerce\\front_end\\decostore\\src\\pages\\ModifierProduit\\ModifierProduitElements.js",[],"C:\\Users\\user\\Desktop\\Site_ecommerce\\front_end\\decostore\\src\\pages\\AjouterAdmin\\AjouterAdmin.js",["136"],"import React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport {\r\n  StyledFormWrapper,\r\n  StyledForm,\r\n  StyledInput,\r\n  StyledButton,\r\n  StyledError,\r\n  Notificationvert,\r\n  Notificationrouge,\r\n  Styledh3,\r\n  StyledFormBlue,\r\n  StyledKagu,\r\n  StyledFormContainer,\r\n  StyledMeuble,\r\n} from \"../../GlobalStyles.js\";\r\nimport KaguBlue from \"../../assets/Images/KaguBlue.png\";\r\nimport Meuble from \"../../assets/Images/meuble3.png\";\r\nimport { useHistory } from \"react-router\";\r\nconst initalState = {\r\n  nom: \"\",\r\n  prenom: \"\",\r\n  email: \"\",\r\n  numtel: \"\",\r\n  password: \"\",\r\n  roles: \"admin\",\r\n};\r\nexport const AjouterAdmin = () => {\r\n  const [state, setState] = useState(initalState);\r\n  const [confirm, setConfirm] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n  const [Notiv, setNotiv] = useState(\"\");\r\n  const [Notir, setNotir] = useState(\"\");\r\n  const history = useHistory();\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    console.log(\"submitted!\");\r\n    console.log(state);\r\n\r\n    for (let key in state) {\r\n      if (state[key] === \"\") {\r\n        if (key === \"nom\") {\r\n          setNotiv(\"\");\r\n          setNotir(\"\");\r\n          setError(`Vous devez saisir votre nom`);\r\n        } else if (key === \"prenom\") {\r\n          setNotiv(\"\");\r\n          setNotir(\"\");\r\n          setError(`Vous devez saisir votre prénom`);\r\n        } else if (key === \"email\") {\r\n          setNotiv(\"\");\r\n          setNotir(\"\");\r\n          setError(`Vous devez saisir votre Email`);\r\n        } else if (key === \"numtel\") {\r\n          setNotiv(\"\");\r\n          setNotir(\"\");\r\n          setError(`Vous devez saisir votre numéro de téléphone`);\r\n        } else if (key === \"password\") {\r\n          setNotiv(\"\");\r\n          setNotir(\"\");\r\n          setError(`Vous devez saisir votre mot de passe`);\r\n        }\r\n        return;\r\n      }\r\n    }\r\n    if (state.numtel.length > 10) {\r\n      setNotiv(\"\");\r\n      setNotir(\"\");\r\n      setError(\"Entrez un numéro de téléphone de moins de 10 chiffres\");\r\n      return;\r\n    } else if (!state.numtel.match(/^[0-9]+$/)) {\r\n      setNotiv(\"\");\r\n      setNotir(\"\");\r\n      setError(\"Entrez un numéro de téléphone qui contient que des chiffres\");\r\n      return;\r\n    }\r\n    if (state.password.length < 8) {\r\n      setNotiv(\"\");\r\n      setNotir(\"\");\r\n      setError(\"Utiliser un mot de passe qui contient au moins 8 caractère\");\r\n      return;\r\n    }\r\n    if (state.password !== confirm) {\r\n      setNotiv(\"\");\r\n      setNotir(\"\");\r\n      setError(\r\n        \"Les mots de passe saisis ne sont pas identiques, Veuillez les ressasir\"\r\n      );\r\n      return;\r\n    }\r\n    setError(\"\");\r\n    axios\r\n      .post(\r\n        \"https://fathomless-coast-11439.herokuapp.com/api/auth/signup\",\r\n        state\r\n      )\r\n      .then((response) => {\r\n        setError(\"\");\r\n        setNotir(\"\");\r\n        setNotiv(\"L'admin a été ajouté avec succès\");\r\n      })\r\n      .catch((erreur) => {\r\n        setError(\"\");\r\n        setNotiv(\"\");\r\n        setNotir(erreur.response.data.message);\r\n      });\r\n  };\r\n\r\n  const handleInput = (e) => {\r\n    const inputName = e.currentTarget.name;\r\n    const value = e.currentTarget.value;\r\n    if (inputName === \"confirm_password\") {\r\n      console.log(value);\r\n      setConfirm(value);\r\n    }\r\n    setState((prev) => ({ ...prev, [inputName]: value }));\r\n  };\r\n  return (\r\n    <div>\r\n      <StyledFormWrapper>\r\n        <StyledFormContainer>\r\n          <StyledFormBlue>\r\n            <StyledMeuble src={Meuble} />\r\n          </StyledFormBlue>\r\n          <StyledForm onSubmit={handleSubmit}>\r\n            <center>\r\n              <StyledKagu src={KaguBlue} />\r\n            </center>\r\n            <Styledh3>Ajouter un Administrateur !</Styledh3>\r\n            <br />\r\n            <label htmlFor=\"nom\"></label>\r\n            <StyledInput\r\n              type=\"text\"\r\n              name=\"nom\"\r\n              value={state.nom}\r\n              onChange={handleInput}\r\n              placeholder=\"Nom...\"\r\n            />\r\n            <label htmlFor=\"prenom\"></label>\r\n            <StyledInput\r\n              type=\"text\"\r\n              name=\"prenom\"\r\n              value={state.prenom}\r\n              onChange={handleInput}\r\n              placeholder=\"Prénom...\"\r\n            />\r\n            <label htmlFor=\"email\"></label>\r\n            <StyledInput\r\n              type=\"email\"\r\n              name=\"email\"\r\n              value={state.email}\r\n              onChange={handleInput}\r\n              placeholder=\"Email...\"\r\n            />\r\n            <label htmlFor=\"tel\"></label>\r\n            <StyledInput\r\n              type=\"tel\"\r\n              name=\"numtel\"\r\n              value={state.numtel}\r\n              onChange={handleInput}\r\n              placeholder=\"Numéro de téléphone...\"\r\n            />\r\n            <label htmlFor=\"password\"></label>\r\n            <StyledInput\r\n              type=\"password\"\r\n              name=\"password\"\r\n              value={state.password}\r\n              onChange={handleInput}\r\n              placeholder=\"Mot de passe...\"\r\n            />\r\n            <label htmlFor=\"confirm_password\"></label>\r\n            <StyledInput\r\n              type=\"password\"\r\n              name=\"confirm_password\"\r\n              value={confirm}\r\n              onChange={handleInput}\r\n              placeholder=\"Confirmez le mot de passe...\"\r\n            />\r\n            {error && (\r\n              <StyledError>\r\n                <p>{error}</p>\r\n              </StyledError>\r\n            )}\r\n            {Notir && (\r\n              <Notificationrouge>\r\n                <span>{Notir}</span>\r\n              </Notificationrouge>\r\n            )}\r\n            {Notiv && (\r\n              <Notificationvert>\r\n                <span>{Notiv}</span>\r\n              </Notificationvert>\r\n            )}\r\n            <StyledButton type=\"submit\">\r\n              Ajouter Admin{console.log(state)}\r\n            </StyledButton>\r\n          </StyledForm>\r\n        </StyledFormContainer>\r\n      </StyledFormWrapper>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AjouterAdmin;\r\n","C:\\Users\\user\\Desktop\\Site_ecommerce\\front_end\\decostore\\src\\pages\\Catalogue\\CatalogueElements.js",["137"],"import styled, { css } from \"styled-components\";\r\nexport const StyledFormWrapper = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  flex-direction: column;\r\n  padding: 0 20px;\r\n  margin-bottom: 100px;\r\n`;\r\nexport const StyledFormContainer = styled.div`\r\n  width: 100%;\r\n  background-color: #fff;\r\n  display: flex;\r\n  flex-direction: row;\r\n  flex-wrap: wrap;\r\n  align-items: center;\r\n  justify-content: center;\r\n  height: 80%;\r\n\r\n  @media screen and (max-width: 991px) {\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n  }\r\n`;\r\nexport const CatalogueWrapper = styled.div`\r\n  padding: 150px;\r\n  width: 100%;\r\n  background-color: #fff;\r\n  border-radius: 100px;\r\n  box-sizing: border-box;\r\n  box-shadow: 0px 0px 20px 0px rgba(0, 0, 0, 0.2);\r\n  display: flex;\r\n  flex-direction: column;\r\n  flex-wrap: wrap;\r\n  align-items: center;\r\n  justify-content: center;\r\n`;\r\nexport const CardImg = styled.img`\r\n  width: 75px;\r\n  height: 75px;\r\n  padding: 10px 0;\r\n  -webkit-transition: all 800ms cubic-bezier(0, 0, 0.18, 1);\r\n  -moz-transition: all 800ms cubic-bezier(0, 0, 0.18, 1);\r\n  -o-transition: all 800ms cubic-bezier(0, 0, 0.18, 1);\r\n  transition: all 800ms cubic-bezier(0, 0, 0.18, 1);\r\n  /* ease-out */\r\n  -webkit-transition-timing-function: cubic-bezier(0, 0, 0.18, 1);\r\n  -moz-transition-timing-function: cubic-bezier(0, 0, 0.18, 1);\r\n  -o-transition-timing-function: cubic-bezier(0, 0, 0.18, 1);\r\n  transition-timing-function: cubic-bezier(0, 0, 0.18, 1);\r\n  /* ease-out */\r\n  &:hover {\r\n    -o-filter: blur(7px);\r\n    -ms-filter: blur(7px);\r\n    filter: blur(7px);\r\n    filter: progid:DXImageTransform.Microsoft.Blur(pixelradius='7', shadowopacity='0.0');\r\n    opacity: 0.4;\r\n  }\r\n`;\r\nexport const Form = styled.form`\r\n  position: relative;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  align-self: flex-end;\r\n  margin: 10px;\r\n\r\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);\r\n  background-color: white;\r\n  /* Change width of the form depending if the bar is opened or not */\r\n  width: ${(props) => (props.barOpened ? \"30rem\" : \"2rem\")};\r\n  /* If bar opened, normal cursor on the whole form. If closed, show pointer on the whole form so user knows he can click to open it */\r\n  cursor: ${(props) => (props.barOpened ? \"auto\" : \"pointer\")};\r\n  padding: 2rem;\r\n  height: 2rem;\r\n  border-radius: 10rem;\r\n  transition: width 300ms cubic-bezier(0.645, 0.045, 0.355, 1);\r\n`;\r\nexport const Input = styled.input`\r\n  font-size: 14px;\r\n  line-height: 1;\r\n  background-color: transparent;\r\n  width: 100%;\r\n  margin-left: ${(props) => (props.barOpened ? \"1rem\" : \"0rem\")};\r\n  border: none;\r\n  color: #848080;\r\n  transition: margin 300ms cubic-bezier(0.645, 0.045, 0.355, 1);\r\n\r\n  &:focus,\r\n  &:active {\r\n    outline: none;\r\n  }\r\n  &::placeholder {\r\n    color: #848080;\r\n  }\r\n`;\r\nexport const ButtonR = styled.button`\r\n  line-height: 1;\r\n  pointer-events: ${(props) => (props.barOpened ? \"auto\" : \"none\")};\r\n  cursor: ${(props) => (props.barOpened ? \"pointer\" : \"none\")};\r\n  background-color: transparent;\r\n  border: none;\r\n  outline: none;\r\n  color: #848080; ;\r\n`;\r\n",{"ruleId":"138","replacedBy":"139"},{"ruleId":"140","replacedBy":"141"},{"ruleId":"142","severity":1,"message":"143","line":68,"column":28,"nodeType":"144","messageId":"145","endLine":68,"endColumn":30},{"ruleId":"142","severity":1,"message":"146","line":79,"column":40,"nodeType":"144","messageId":"147","endLine":79,"endColumn":42},{"ruleId":"148","severity":1,"message":"149","line":110,"column":21,"nodeType":"150","endLine":110,"endColumn":46},{"ruleId":"151","severity":1,"message":"152","line":11,"column":10,"nodeType":"153","messageId":"154","endLine":11,"endColumn":23},{"ruleId":"151","severity":1,"message":"155","line":10,"column":10,"nodeType":"153","messageId":"154","endLine":10,"endColumn":19},{"ruleId":"151","severity":1,"message":"152","line":11,"column":10,"nodeType":"153","messageId":"154","endLine":11,"endColumn":23},{"ruleId":"151","severity":1,"message":"156","line":4,"column":17,"nodeType":"153","messageId":"154","endLine":4,"endColumn":25},{"ruleId":"151","severity":1,"message":"157","line":26,"column":10,"nodeType":"153","messageId":"154","endLine":26,"endColumn":17},{"ruleId":"151","severity":1,"message":"158","line":26,"column":19,"nodeType":"153","messageId":"154","endLine":26,"endColumn":29},{"ruleId":"142","severity":1,"message":"146","line":121,"column":40,"nodeType":"144","messageId":"147","endLine":121,"endColumn":42},{"ruleId":"151","severity":1,"message":"159","line":3,"column":21,"nodeType":"153","messageId":"154","endLine":3,"endColumn":32},{"ruleId":"160","severity":1,"message":"161","line":30,"column":6,"nodeType":"162","endLine":30,"endColumn":8,"suggestions":"163"},{"ruleId":"164","severity":1,"message":"165","line":114,"column":15,"nodeType":"150","endLine":114,"endColumn":63},{"ruleId":"151","severity":1,"message":"166","line":34,"column":9,"nodeType":"153","messageId":"154","endLine":34,"endColumn":16},{"ruleId":"151","severity":1,"message":"167","line":1,"column":18,"nodeType":"153","messageId":"154","endLine":1,"endColumn":21},"no-native-reassign",["168"],"no-negated-in-lhs",["169"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","Array.prototype.filter() expects a value to be returned at the end of arrow function.","expectedAtEnd","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-unused-vars","'FaUserFriends' is defined but never used.","Identifier","unusedVar","'BiPackage' is defined but never used.","'setState' is assigned a value but never used.","'nomtype' is assigned a value but never used.","'setnomtype' is assigned a value but never used.","'useLocation' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.","ArrayExpression",["170"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'history' is assigned a value but never used.","'css' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"171","fix":"172"},"Update the dependencies array to be: [id]",{"range":"173","text":"174"},[840,842],"[id]"]